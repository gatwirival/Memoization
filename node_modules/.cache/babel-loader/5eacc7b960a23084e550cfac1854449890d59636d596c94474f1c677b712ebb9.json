{"ast":null,"code":"var _jsxFileName = \"/home/gatwiri/scalability/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizationApp = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState('');\n\n  // Expensive computation using count and text values\n  const expensiveComputation = (count, text) => {\n    console.log('Running expensive computation...');\n    let result = '';\n    for (let i = 0; i < count; i++) {\n      result += text + ' ';\n    }\n    return result;\n  };\n\n  // Memoized result of expensive computation\n  const memoizedResult = useMemo(() => expensiveComputation(count, text), [count, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Text: \", text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Memoized Result:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: memoizedResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoizationApp, \"Ajbm7CQAWjQ3M7GeDf3CqmLZWHA=\");\n_c = MemoizationApp;\nexport default MemoizationApp;\nvar _c;\n$RefreshReg$(_c, \"MemoizationApp\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","MemoizationApp","_s","count","setCount","text","setText","expensiveComputation","console","log","result","i","memoizedResult","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/gatwiri/scalability/src/App.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\n\nconst MemoizationApp = () => {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState('');\n\n  // Expensive computation using count and text values\n  const expensiveComputation = (count, text) => {\n    console.log('Running expensive computation...');\n    let result = '';\n    for (let i = 0; i < count; i++) {\n      result += text + ' ';\n    }\n    return result;\n  };\n\n  // Memoized result of expensive computation\n  const memoizedResult = useMemo(() => expensiveComputation(count, text), [\n    count,\n    text,\n  ]);\n\n  return (\n    <div>\n      <h2>Count: {count}</h2>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n\n      <h2>Text: {text}</h2>\n      <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n\n      <h2>Memoized Result:</h2>\n      <p>{memoizedResult}</p>\n    </div>\n  );\n};\n\nexport default MemoizationApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMU,oBAAoB,GAAGA,CAACJ,KAAK,EAAEE,IAAI,KAAK;IAC5CG,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,EAAEQ,CAAC,EAAE,EAAE;MAC9BD,MAAM,IAAIL,IAAI,GAAG,GAAG;IACtB;IACA,OAAOK,MAAM;EACf,CAAC;;EAED;EACA,MAAME,cAAc,GAAGd,OAAO,CAAC,MAAMS,oBAAoB,CAACJ,KAAK,EAAEE,IAAI,CAAC,EAAE,CACtEF,KAAK,EACLE,IAAI,CACL,CAAC;EAEF,oBACEL,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,GAAI,SAAO,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAU,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE9DjB,OAAA;MAAAa,QAAA,GAAI,QAAM,EAACR,IAAI;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBjB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEf,IAAK;MAACgB,QAAQ,EAAGC,CAAC,IAAKhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5EjB,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA;MAAAa,QAAA,EAAID;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAACf,EAAA,CAhCID,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}